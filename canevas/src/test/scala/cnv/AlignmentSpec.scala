package cnv

import cnv.Alignment._

import org.scalatest._

class AlignmentSpec extends FlatSpec with Matchers {

  /** Test if cnv.Alignment.generateCigarString is working correctly */
  "Cigar string" should "be extracted correctly from alignment" in {
    val sequence = "ACGT"
    val reference = "CG"

    val testValue = generateCigarString(sequence, reference)
    val expectedValue = "1I2M1I"

    testValue should be (expectedValue)
  }

  /** Test if cnv.Alignment.generateCigarString is working correctly */
  "Cigar string" should "be extracted correctly from alignment bis" in {
    val sequence = "AACAA"
    val reference = "AACGTAA"

    val testValue = generateCigarString(sequence, reference)
    val expectedValue = "3M2D2M"

    testValue should be (expectedValue)
  }

    /** Test if cnv.Alignment.generateCigarString is working correctly */
    "Cigar string" should "be extracted correctly from alignment tris" in {
      val sequence = "CTTGCACTTGCTGCGACAGGCCCCGCACGTCCGCGCGGCTCAGCCCTGCCCTTACACGAAGCGTAGAGACGGTGGCGGCTGTGTTCCAGTAAGATGTGGCCCGTGGAGCCTGTGGTGGCTGCAGGTTGCTGATCCTGGACCCACAGGTTGCCGGGCCCCTCGGTGTGCCTGCCAGTCTCACACCAACCGGCCCAGGCCCCGCTGGCCTCAGCCTGGTCACCACCTCCACGCGCGGCGCTGTCTGCTCTTGGCCGGGCCATCCTGTCCTGGCCCTCCCTGCCCACGGCTCCGGGAAGGGCTCTGCCAAGAGACTTCTCCATTCCCACCCGTCACTTTTGAGGATCCGGCTCCCCGGTCCCTCCTGTGCCAGCCAGCATGTGCCATGGCTCCCCGACCCTGTGCCAGCCCGTGTGTGCCATGGCTCCCGACCCCGTGCCAGCCCATGTGTGCCATGGCTCCCCAACCCTGTGCCAGCCCGTGTGGGCCATGGCCCCACCGAACCCGTGCCAACCCGCGTGTGCCATGGGTTCCACCGACCCCGTGCCAGCCCGCGTGCGCCATGGCTTCCCTGATCCCATGCCAGCCCGCGTGTGCGCCATGGCTCCCCCGACTCCGTGCCAGCCCGCGTGTGCGCCATGGCTCCCCCGACCCCGTGCCAGCCCGCGTGCGTCATGACCCCACCGCGTGTGCGCCATGGCTTCCCCGACCCCATGCCAGCCCGCGTGCGCCATGGTTCCACTGACCCTGTGCCAGCCAGTGCGGGCTGATCTGCTGCCCAGCTGTGGGCGTCCTGAACCCCAGGCCGTGGGACAACTTGGGCCGGGAGAGAAGATCTTTCACTTTGATTTGGGGCATAGGTGGAGGCTCCCCCTACGGCCCTGTGTGGAGGACCCTGTTTCCTGGGTGCTGTGATGCCACTGGCCTCGACCCTGGCTCCTCATGCGTGTCGCCTGCGGGCGTGAGGTCCGTGCAGAGGAAGGAAGAAAGAGGAAGTAAGACGTGAGCTCGGCCAGCCCCGGGTGCAGGAGGAGTGGGCGAAGCGGGCGACAGGGTCCCATGCCTTCCCCTTCCTTCCTCAGGCCCGGCCTCCATCTCTCCCACCACACCAGGCGCCTGCTGGGTGATGGCGGGGTCACAGCAGGGGAGACGTTGGCTCCTCCGCTCTGCTCCCTGAGCCCCACGGGGCCTGAGTGCAGAGGAAGGAGGT"
      val reference = "CTTGCACTTGCTGCGACAGGCCCCTTACGTCCGCGCGGCTCAGCCCTGCCCTTACACGAAGCGTAGAGACGGTGGCGGCTGTGTTCCAGTAAGATGTGGCCCGTGGAGCCTGTGGTGGCTGCAGGTTGCTGATCCTGGACCCACAGGTTGCCGGGCCCCTCGGTGTGCCTGCCAGTCTCACACCAACCGGCCCAGGCCCCGCTGGCTTCAGCCTGGTCACCACCTCCACGCGCGGCGCTGTCTGCTCTTGGCCGGGCCATCCTGTCCTGGCCCTCCCTGCCCACGGCTCCGGGAAGGGCTCTGCCAAGAGACTTCTCCATTCCCACCCGTCACTTTTGAGGATCCGGCTCCCCGGTCCCTCCTGTGCCAGCCAGCATGTGCCATGGCTCCCCGACCCTGTGCCAGCCCGTGTGTGCCATGGCTCCCGACCCCGTGCCAGCCCATGTGTGCCATGGCTCCCCAACCCTGTGCCAGCCCGTGTGGGCCATGGCCCCACCGAACCCGTGCCAACCCGCGTGTGCCATGGGTTCCACCGACCCCGTGCCAGCCCGCGTGCGCCATGGCTTCCCTGATCCCATGCCAGCCCGCGTGTGCGCCATGGCTCCCCCGACCCCGTGCCAGCCCGCGTGCGTCATGACCCCACCGCGTGTGCGCCATGGCTTCCCCGACCCCATGCCAGCCCGCGTGCGCCATGGTTCCACTGACCCTGTGCCAGCCAGTGCGGGCTGATCTGCTGCCCAGCTGTGGGCGTCCTGAACCCCAGGCCGTGGGACAACTTGGGCCGGGAGAGAAGATCTTTCACTTTGATTTGGGGCATAGGTGGAGGCTCCCCCTACGGCCCTGTGTGGAGGACCCTGTTTCCTGGGTGCTGTGATGCCACTGGCCTCGACCCTGGCTCCTCATGCGTGTCGCCTGCGGGCGTGAGGTCCGTGCAGAGGAAGGAAGAAAGAGGAAGTAAGACGTGAGCTCGGCCAGCCCCGGGTGCAGGAGGAGTGGGCGAAGCGGGCGACAGGGTCCCATGCCTTCCCCTTCCTTCCTCAGGCCCGGCCTCCATCTCTCCCACCACACCAGGCGCCTGCTGGGTGATGGCGGGGTCACAGCAGGGGAGACGTTGGCTCCTCCGCTCTGCTCCCTGAGCCCCACGGGGCCTGAGTGCAGAGGAAGGAGGT"
  
      val testValue = generateCigarString(sequence, reference)
      val expectedValue = "611M38I558M"
  
      testValue should be (expectedValue)
    }
}